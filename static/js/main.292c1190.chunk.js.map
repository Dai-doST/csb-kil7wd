{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","button","extendedIcon","marginRight","field","width","acc","pro","display","marginLeft","container","flexWrap","textField","ContainedButtons","classes","React","useState","value","setValue","className","Button","variant","color","disabled","href","onClick","alert","Fab","noValidate","autoComplete","TextField","id","label","Accordion","AccordionSummary","expandIcon","FormControlLabel","event","stopPropagation","onFocus","control","Checkbox","AccordionDetails","Typography","CircularProgress","FormControl","component","FormLabel","RadioGroup","name","onChange","target","Radio","type","defaultValue","InputLabelProps","shrink","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.292c1190.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n\n  button: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  },\n\n  field: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  },\n\n  acc: {\n    width: \"100%\"\n  },\n\n  pro: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  },\n\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nexport default function ContainedButtons() {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(\"female\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className={classes.button}>\n      <Button variant=\"contained\">Default</Button>\n      <Button variant=\"contained\" color=\"primary\">\n        Primary\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\">\n        Secondary\n      </Button>\n      <Button variant=\"contained\" disabled>\n        Disabled\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n        Link\n      </Button>\n      <Button\n        onClick={() => {\n          alert(\"clicked\");\n        }}\n      >\n        Click me\n      </Button>\n\n      <Fab color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n      <Fab color=\"secondary\" aria-label=\"edit\">\n        <EditIcon />\n      </Fab>\n      <Fab variant=\"extended\">\n        <NavigationIcon className={classes.extendedIcon} />\n        Navigate\n      </Fab>\n      <Fab disabled aria-label=\"like\">\n        <FavoriteIcon />\n      </Fab>\n\n      <form className={classes.field} noValidate autoComplete=\"off\">\n        <TextField id=\"standard-basic\" label=\"Standard\" />\n        <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n        <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n      </form>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\"\n        >\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n            control={<Checkbox />}\n            label=\"I acknowledge that I should stop the click event propagation\"\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography color=\"textSecondary\">\n            The click event of the nested action will propagate up and expand\n            the accordion unless you explicitly stop it.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions2-content\"\n          id=\"additional-actions2-header\"\n        >\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n            control={<Checkbox />}\n            label=\"I acknowledge that I should stop the focus event propagation\"\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography color=\"textSecondary\">\n            The focus event of the nested action will propagate up and also\n            focus the accordion unless you explicitly stop it.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions3-content\"\n          id=\"additional-actions3-header\"\n        >\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n            control={<Checkbox />}\n            label=\"I acknowledge that I should provide an aria-label on each action that I add\"\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography color=\"textSecondary\">\n            If you forget to put an aria-label on the nested action, the label\n            of the action will also be included in the label of the parent\n            button that controls the accordion expansion.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <div className={classes.pro}>\n        <CircularProgress />\n        <CircularProgress color=\"secondary\" />\n      </div>\n\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Gender</FormLabel>\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n          <FormControlLabel\n            value=\"disabled\"\n            disabled\n            control={<Radio />}\n            label=\"(Disabled option)\"\n          />\n        </RadioGroup>\n      </FormControl>\n\n      <form className={classes.container} noValidate>\n        <TextField\n          id=\"date\"\n          label=\"Birthday\"\n          type=\"date\"\n          defaultValue=\"2022-10-31\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      </form>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}